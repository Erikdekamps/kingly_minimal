{#
/**
 * @file
 * Component template for a responsive image.
 *
 * @see kingly_minimal/components/image/image.component.yml
 *
 * @props
 * - render_array: (Object) A pre-rendered Drupal image array.
 * - responsive_image_style: (String) Machine name of a responsive image style.
 * - src: (String) The URI or URL of the image.
 * - alt: (String) The required alt text for accessibility.
 * - width: (String|Number) The native width of the image.
 * - height: (String|Number) The native height of the image.
 * - caption: (String) An optional caption for the image.
 * - url: (String) An optional URL to make the image a link.
 * - attributes: (Object) A Drupal attributes object for the wrapper.
 */
#}
{% set has_caption = caption is not empty %}
{# Use a <figure> for semantic correctness if a caption exists. #}
{% set root_tag = has_caption ? 'figure' : 'div' %}

<{{ root_tag }}{{ attributes.addClass('image-component') }}>
{% if url %}
<a href="{{ url }}" class="image-component__link">
  {% endif %}

  {#
  Priority 1: If a pre-rendered array is passed, print it directly.
  This is the most Drupal-native way to handle things like `author_picture`.
  #}
  {% if render_array %}
    {{ render_array }}
  {% elseif responsive_image_style and src %}
    {#
    Priority 2: Render a responsive <picture> element if a style is specified.
    NOTE: This requires `drupal_image()` from the Twig Tweak module.
    #}
    {{ drupal_image(src, responsive_image_style, {alt: alt, width: width, height: height, loading: 'lazy'}) }}
  {% elseif src %}
    {# Priority 3: Fallback to a standard <img> tag. #}
    <img
      src="{{ src }}"
      alt="{{ alt }}"
      {{ width ? 'width="' ~ width ~ '"' }}
      {{ height ? 'height="' ~ height ~ '"' }}
      loading="lazy"
    >
  {% endif %}

  {% if url %}
</a>
{% endif %}

  {% if has_caption %}
    <figcaption class="image-component__caption">{{ caption }}</figcaption>
  {% endif %}
</{{ root_tag }}>
