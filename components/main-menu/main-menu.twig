{#
/**
 * @file
 * Component template for the main navigation menu.
 *
 * This component has been refactored to be a true wrapper. It renders the
 * semantic <nav> element and then explicitly includes the `kingly_minimal:menu`
 * component to render the menu tree itself.
 *
 * @see kingly_minimal/components/main-menu/main-menu.component.yml
 */
#}
{% set heading_id = attributes.id ~ '-label' %}
{% set nav_attributes = create_attribute() %}

{#
Conditionally set the accessible name for the navigation.
- If a label exists, use aria-labelledby to point to the visually hidden h2.
- If no label exists, provide a fallback aria-label to prevent an empty name.
#}
{% if label %}
  {% do nav_attributes.setAttribute('aria-labelledby', heading_id) %}
{% else %}
  {% do nav_attributes.setAttribute('aria-label', 'Main navigation'|t) %}
{% endif %}

{#
The data-component-id attribute is essential for SDC to discover this component
and attach its assets (CSS). We merge our conditional nav_attributes here.
#}
<nav {{ attributes.merge(nav_attributes) }} role="navigation">
  {#
  Print the block title as a visually hidden heading. This provides an
  accessible name for the <nav> element via aria-labelledby.
  This is only printed if the label is provided.
  #}
  {{ title_prefix }}
  {% if label %}
    <h2{{ title_attributes.addClass('visually-hidden') }} id="{{ heading_id }}">{{ label }}</h2>
  {% endif %}
  {{ title_suffix }}

  {#
  Instead of printing `{{ content }}`, we now explicitly include our `menu` SDC.
  We must extract the `items` array from the `content` render array that is
  passed down from the block.
  #}
  {% if content['#items'] %}
    {{ include('kingly_minimal:menu', {
      items: content['#items'],
      attributes: content['#attributes'],
    }, with_context = false) }}
  {% endif %}
</nav>
