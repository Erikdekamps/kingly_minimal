{#
/**
 * @file
 * Dispatcher component for media entities.
 *
 * This component inspects the media entity's bundle and includes the
 * corresponding sub-component (e.g., 'media--image', 'media--video').
 * It passes its own props and slots down to the child component.
 *
 * @see kingly_minimal/components/media/media.component.yml
 *
 * @props
 * - media_entity: The full media entity object.
 * - attributes: A Drupal attributes object for the wrapper element.
 *
 * @slots
 * - content: The rendered media entity.
 */
#}
{% if media_entity %}
  {% set media_type = media_entity.bundle() %}

  {# Map media bundle names to their SDC component names. #}
  {% set component_map = {
    'audio': 'kingly_minimal:media--audio',
    'document': 'kingly_minimal:media--document',
    'image': 'kingly_minimal:media--image',
    'remote_video': 'kingly_minimal:media--remote-video',
    'svg_image': 'kingly_minimal:media--svg-image',
    'video': 'kingly_minimal:media--video',
  } %}

  {% set component_name = component_map[media_type] %}

  {% if component_name %}
    {# Embed the specific media component, passing all props and slots. #}
    {% embed component_name with {
      attributes: attributes,
      media_entity: media_entity,
    } %}
      {% block content %}
        {# This passes the content from the parent template into the child's slot. #}
        {{ block('content') }}
      {% endblock %}
    {% endembed %}
  {% else %}
    {# Fallback for any unhandled media types. #}
    <div{{ attributes.addClass('media--unhandled') }}>
      {% block content %}{% endblock %}
    </div>
  {% endif %}
{% endif %}
