{#
/**
 * @file
 * Component template for a pager.
 *
 * This template renders a pager with links for first, previous, next, last,
 * and numbered pages. It is designed to be fully accessible.
 *
 * @see kingly_minimal/components/pager/pager.component.yml
 *
 * @props
 * - items: A structured list of pager links.
 * - heading_id: The HTML ID for the visually hidden h4 heading.
 * - attributes: A Drupal attributes object for the root <nav> element.
 */
#}
{% if items %}
  <nav{{ attributes.addClass('pager').setAttribute('role', 'navigation').setAttribute('aria-labelledby', heading_id) }}>
    <h4 id="{{ heading_id }}" class="visually-hidden">{{ 'Pagination'|t }}</h4>
    <ul class="pager__items">
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
        <li class="pager__item pager__item--first">
          <a href="{{ items.first.href }}" class="pager__link" title="{{ 'Go to first page'|t }}"{{ items.first.attributes|without('href', 'title', 'class') }}>
            <span class="visually-hidden">{{ 'First page'|t }}</span>
            <span aria-hidden="true">{{ items.first.text|default('« First'|t) }}</span>
          </a>
        </li>
      {% endif %}

      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
        <li class="pager__item pager__item--previous">
          <a href="{{ items.previous.href }}" class="pager__link" title="{{ 'Go to previous page'|t }}" rel="prev"{{ items.previous.attributes|without('href', 'title', 'rel', 'class') }}>
            <span class="visually-hidden">{{ 'Previous page'|t }}</span>
            <span aria-hidden="true">{{ items.previous.text|default('‹ Previous'|t) }}</span>
          </a>
        </li>
      {% endif %}

      {# Add an ellipsis if there are further previous pages. #}
      {% if items.pages['…'] is defined %}
        <li class="pager__item pager__item--ellipsis" role="presentation">…</li>
      {% endif %}

      {# Now generate the actual page piece. #}
      {% for key, item in items.pages %}
        {% if key is number %}
          <li class="pager__item pager__item--number {{ items.current == key ? 'is-active' }}">
            {% set link_attributes = item.attributes|without('href', 'title', 'class') %}
            {% if items.current == key %}
              {% set link_attributes = link_attributes.setAttribute('aria-current', 'page') %}
            {% endif %}
            <a href="{{ item.href }}" class="pager__link" title="{{ 'Go to page @key'|t({'@key': key}) }}"{{ link_attributes }}>
              <span class="visually-hidden">
                {{ items.current == key ? 'Current page'|t : 'Page'|t }}
              </span>
              {{- key -}}
            </a>
          </li>
        {% endif %}
      {% endfor %}

      {# Add an ellipsis if there are further next pages. #}
      {% if items.pages['…'] is defined %}
        <li class="pager__item pager__item--ellipsis" role="presentation">…</li>
      {% endif %}

      {# Print next item if we are not on the last page. #}
      {% if items.next %}
        <li class="pager__item pager__item--next">
          <a href="{{ items.next.href }}" class="pager__link" title="{{ 'Go to next page'|t }}" rel="next"{{ items.next.attributes|without('href', 'title', 'rel', 'class') }}>
            <span class="visually-hidden">{{ 'Next page'|t }}</span>
            <span aria-hidden="true">{{ items.next.text|default('Next ›'|t) }}</span>
          </a>
        </li>
      {% endif %}

      {# Print last item if we are not on the last page. #}
      {% if items.last %}
        <li class="pager__item pager__item--last">
          <a href="{{ items.last.href }}" class="pager__link" title="{{ 'Go to last page'|t }}"{{ items.last.attributes|without('href', 'title', 'class') }}>
            <span class="visually-hidden">{{ 'Last page'|t }}</span>
            <span aria-hidden="true">{{ items.last.text|default('Last »'|t) }}</span>
          </a>
        </li>
      {% endif %}
    </ul>
  </nav>
{% endif %}
