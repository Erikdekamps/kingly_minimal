[data-component-id='kingly_minimal:select'] {
  // Tier 3: Component-Specific Variables.
  // These are defined locally to the component for true encapsulation.
  --arrow-icon-light: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23222222' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  --arrow-icon-dark: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23e1e1e1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");

  // Default to the light mode icon.
  --select-arrow-icon: var(--arrow-icon-light);

  -webkit-appearance: none;
  appearance: none;
  display: block;
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  font-family: inherit;
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  color: var(--color-text);
  background-color: var(--color-background);
  border: var(--border-width-thin) solid var(--color-border);
  border-radius: var(--border-radius);
  transition: border-color var(--transition-duration-fast) var(--transition-timing-function),
  box-shadow var(--transition-duration-fast) var(--transition-timing-function);

  // Custom arrow styling using our locally-scoped CSS variable.
  background-image: var(--select-arrow-icon);
  background-repeat: no-repeat;
  background-position: right var(--spacing-md) center;
  background-size: 16px 12px;
  padding-right: var(--spacing-xl);

  // WCAG 2.4.7: High-contrast focus indicator.
  &:focus-visible {
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
    outline-offset: var(--focus-ring-offset);
    border-color: var(--color-primary);
  }

  // Style for disabled state.
  &:disabled {
    background-color: var(--color-light-gray);
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Style for the error state.
.form-item--error [data-component-id='kingly_minimal:select'] {
  border-color: var(--color-error-border);

  &:focus-visible {
    border-color: var(--color-primary);
  }
}

// Override the locally-scoped variable for dark mode.
html[data-theme="dark"] [data-component-id='kingly_minimal:select'] {
  --select-arrow-icon: var(--arrow-icon-dark);
}
