// file: components/slideshow/slideshow.scss

// -----------------------------------------------------------------------------
// Slideshow Component Styles
// -----------------------------------------------------------------------------

[data-component-id='kingly_minimal:slideshow'] {
  // --- Header: Title and Arrows ---
  .slideshow__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-md);
  }

  .slideshow__title {
    font-family: var(--font-family-heading);
    font-size: var(--font-size-h2);
    line-height: var(--line-height-heading);
    margin: 0;
  }

  // --- Splide.js Theme Overrides ---
  .splide__arrows {
    position: static;
    transform: none;
    width: auto;
    display: flex;
    gap: var(--spacing-sm);
  }

  .splide__arrow {
    // MODIFICATION: Add a background color for the default state.
    background-color: var(--color-light-gray);
    opacity: 1;
    position: static;
    transform: none;
    width: var(--size-target-min);
    height: var(--size-target-min);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-circle);
    // MODIFICATION: Set the default border to be transparent.
    border: var(--border-width-thin) solid transparent;
    color: var(--color-text);
    transition: background-color var(--transition-duration-fast) var(--transition-timing-function),
    border-color var(--transition-duration-fast) var(--transition-timing-function),
    color var(--transition-duration-fast) var(--transition-timing-function);

    svg {
      width: var(--size-icon-sm);
      height: var(--size-icon-sm);
      fill: currentColor;
    }

    // The hover state correctly overrides the default background.
    &:hover {
      background-color: var(--color-primary);
      border-color: var(--color-primary);
      color: var(--color-background);
    }

    &:focus-visible {
      outline: var(--focus-ring-width) solid var(--focus-ring-color);
      outline-offset: var(--focus-ring-offset);
    }

    // The disabled state will now correctly inherit the light-gray background
    // and apply the opacity to it.
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;

      &:hover {
        background-color: var(--color-light-gray);
        border-color: transparent;
        color: var(--color-text);
      }
    }
  }

  .splide__list {
    align-items: stretch;
  }

}

// Dark Mode Overrides for disabled arrows.
[data-component-id='kingly_minimal:slideshow'][data-theme="dark"] .splide__arrow:disabled {
  opacity: 1;
  color: var(--color-text);
  // The background will be the dark mode version of light-gray already.
  border-color: transparent;

  svg {
    opacity: 0.4;
  }
}
