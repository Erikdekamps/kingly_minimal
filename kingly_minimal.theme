<?php

/**
 * @file
 * Functions to support theming in the Kingly Minimal theme.
 */

/**
 * Implements hook_preprocess_html().
 *
 * This hook is used to add the theme variation class to the body attribute.
 *
 * @param array $variables
 *   An associative array of variables passed to the theme hook.
 */
function kingly_minimal_preprocess_html(array &$variables): void {
  // If a theme has been selected (and it's not the default), add its class
  // to the body attributes. The 'theme-default' option results in no class,
  // allowing the standard component styles to apply.
  $theme_variation = theme_get_setting('theme_variation');
  if (!isset($theme_variation) || $theme_variation !== 'theme-default') {
    return;
  }
  $variables['attributes']['class'][] = $theme_variation;
}

/**
 * Implements hook_preprocess_page().
 *
 * This hook allows you to add or modify variables for all page templates.
 *
 * @param array $variables
 *   An associative array of variables passed to the theme hook.
 */
function kingly_minimal_preprocess_page(array &$variables): void {
  // Example: To make a dynamic copyright year available in page.html.twig,
  // you would uncomment the following line:
  // $variables['copyright_year'] = date('Y');
}

/**
 * Implements hook_preprocess_block().
 *
 * Use this preprocess function to attach component-specific libraries to
 * blocks.
 *
 * @param array $variables
 *   An associative array of variables passed to the theme hook.
 */
function kingly_minimal_preprocess_block(array &$variables): void {
  // Example: Attach a library to the main menu block.
  // if ($variables['plugin_id'] === 'system_menu_block:main') {
  //   $variables['#attached']['library'][] = 'kingly_minimal/main-menu-component';
  // }
}
