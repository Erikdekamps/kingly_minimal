// kingly_minimal/scss/layout/page.scss

// This is an entry point file. It will be compiled by Vite.
// This includes the reset styles in our compiled CSS.
@use '../base/reset';

// -----------------------------------------------------------------------------
// Main Page Layout
// -----------------------------------------------------------------------------

.layout-container {
  display: grid;
  // Defines a three-row grid: header, main, footer.
  // The 'main' content area (1fr) takes up all available vertical space.
  grid-template-rows: auto 1fr auto;
  // Defines three columns: a flexible gutter, a max-width content column,
  // and another flexible gutter. The gutters will not shrink below the
  // --container-padding value.
  grid-template-columns: minmax(var(--container-padding), 1fr) minmax(0, var(--container-max-width)) minmax(var(--container-padding), 1fr);
}

// --- Grid Placement ---
// This is the key to the layout. We explicitly place the header and main
// content in the central column (2), while the breadcrumbs and footer
// are made to span all three columns (1 / -1), making them full-bleed.

// These elements are constrained to the central content column.
.page-header,
.main-content {
  grid-column: 2;
  // Prevent wide content from breaking the grid layout.
  min-width: 0;
}

// These elements span all columns to achieve the full-bleed effect.
// We target the Drupal region wrapper for maximum reliability.
.region-breadcrumbs,
.page-footer {
  grid-column: 1 / -1;
}

// Styles for the main content wrapper.
.main-content {
  display: grid;
  // A standard 12-column grid for flexible content layout.
  grid-template-columns: repeat(12, 1fr);
  gap: var(--spacing-md);
  // Ensure the grid starts at the top of its allocated space.
  align-content: start;
  // Add vertical space to separate it from header/footer.
  padding-block: var(--spacing-lg);

  // By default, direct children of the main content grid (our regions)
  // should span all 12 columns.
  > * {
    grid-column: 1 / -1;
  }
}

// -----------------------------------------------------------------------------
// Admin Toolbar Integration
// -----------------------------------------------------------------------------

// Adjust the layout container's height when the Gin admin toolbar is present.
body.gin--horizontal-toolbar .layout-container {
  min-height: calc(100vh - var(--gin-toolbar-height, 0px) - var(--gin-toolbar-secondary-height, 0px));
}


// -----------------------------------------------------------------------------
// Responsive Adjustments
// -----------------------------------------------------------------------------

@media (min-width: 768px) { // md breakpoint
  .main-content {
    gap: var(--spacing-lg);
  }
}
