{#
/**
 * @file
 * Theme override to display a node.
 *
 * This template now acts as a "dispatcher" based on the view mode.
 * - If the view mode is 'teaser', it includes the 'node-teaser' SDC.
 * - For all other view modes (e.g., 'full'), it renders the full node markup,
 *   now using the `Image` and `Text` components for consistency.
 *
 * @see template_preprocess_node()
 * @see kingly_minimal/components/node-teaser/node-teaser.twig
 */
#}
{% if view_mode == 'teaser' %}
  {#
  For the 'teaser' view mode, we delegate rendering to our SDC.
  We map the variables available in this template to the props expected
  by the 'node-teaser' component.
  #}
  {{ include('kingly_minimal:node-teaser', {
    url: url,
    label: label,
    content: content,
    submitted: display_submitted ? metadata|merge({'#prefix': author_name ~ ' on ' ~ date}) : null,
    author_picture: display_submitted ? author_picture : null,
    attributes: attributes.addClass('node', 'node--type-' ~ node.bundle|clean_class, 'node--view-mode-teaser'),
  }, with_context = false) }}

{% else %}
  {#
  For the 'full' view mode (and any other non-teaser view mode),
  we render the complete article markup.
  #}
  {%
    set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
  %}
  <article{{ attributes.addClass(classes) }}>

    {# The node title is typically hidden in the 'full' view mode because the
       page_title_block will render it instead. We keep the logic here for other
       potential view modes. #}
    {{ title_prefix }}
    {% if label and not page %}
      <h2{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {{ title_suffix }}

    {% if display_submitted %}
      <footer class="node__meta">
        {# Use the Image component for the author's picture. #}
        {{ include('kingly_minimal:image', {
          render_array: author_picture,
          attributes: { class: ['user-picture'] }
        }, with_context=false) }}
        <div{{ author_attributes.addClass('node__submitted') }}>
          {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
          {{ metadata }}
        </div>
      </footer>
    {% endif %}

    <div{{ content_attributes.addClass('node__content') }}>
      {# Use the Text component to render the main content body. #}
      {{ include('kingly_minimal:text', {
        content: content
      }, with_context=false) }}
    </div>

  </article>

{% endif %}
