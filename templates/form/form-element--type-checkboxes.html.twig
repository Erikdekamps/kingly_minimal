{#
/**
 * @file
 * Theme override for a form element.
 *
 * This is a copy of the base form-element.html.twig, intended to be used for
 * a group of checkboxes. For this template to be used by Drupal, you must add
 * a theme hook suggestion in your kingly_minimal.theme file.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - errors: (optional) Any errors for this form element, may not be set.
 * - prefix: (optional) The form element prefix, may not be set.
 * - suffix: (optional) The form element suffix, may not be set.
 * - required: A boolean indicating whether the given form element is required.
 * - type: The type of the element.
 * - name: The name of the element.
 * - label: A renderable array for the form element label.
 * - label_display: The display settings for the label.
 * - description: A renderable array for the form element description.
 * - children: The rendered form element.
 *
 * @see template_preprocess_form_element()
 */
#}
{% set classes = [
  'js-form-item',
  'form-item',
  'js-form-type-' ~ type|clean_class,
  'form-item-' ~ name|clean_class,
  'js-form-item-' ~ name|clean_class,
  title_attributes.id ? 'form-item--id-' ~ title_attributes.id,
  not title_is_different ? 'form-item--no-label',
  label_display == 'after' ? 'form-item--label-after',
  label_display == 'invisible' ? 'form-item--label-invisible',
  disabled ? 'form-item--disabled',
  errors ? 'form-item--error',
] %}
{% set description_classes = [
  'description',
  description_display == 'invisible' ? 'visually-hidden',
] %}
<div{{ attributes.addClass(classes) }}>
  {% if prefix is not empty %}
    <span class="field-prefix">{{ prefix }}</span>
  {% endif %}
  {% if label_display in ['before', 'invisible'] %}
    {{ label }}
  {% endif %}
  {{ children }}
  {% if suffix is not empty %}
    <span class="field-suffix">{{ suffix }}</span>
  {% endif %}
  {% if label_display == 'after' %}
    {{ label }}
  {% endif %}
  {% if errors %}
    <div class="form-item--error-message">
      <strong>{{ errors }}</strong>
    </div>
  {% endif %}
  {% if description %}
    <div{{ description_attributes.addClass(description_classes) }}>{{ description }}</div>
  {% endif %}
</div>
